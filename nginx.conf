user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

rtmp {
	server {
		listen 1935;
		chunk_size 4096;
		# allow publish 127.0.0.1;
		# deny publish from 112.185.196.94;
		# ffmpeg -i input_video.mp4 -c copy -metadata title="My Video Title" -metadata artist="John Doe" output_video.mp4

		application live {
			live on;
			record off;
			hls on;
			hls_path /var/www/html/stream/hls;
			hls_fragment 5;
			hls_playlist_length 10;

			dash on;
			dash_path /var/www/html/stream/dash;
		}

		# 영상 품질 설정 추가
		application live2 {
			live on;
			record off;
			hls on;
			hls_path /var/www/html/stream/hls_quality;
			hls_fragment 5;
			hls_playlist_length 10;

			# types {
			# 	application/vnd.apple.mpegurl m3u8;
			# 	video/mp2t ts;
			# }

			# Quality variants
			hls_variant _360p BANDWIDTH=500000;
			hls_variant _480p BANDWIDTH=800000;
			hls_variant _720p BANDWIDTH=1500000;
			hls_variant _1080p BANDWIDTH=3000000;

			# Master playlist
			hls_variant _all BANDWIDTH=1500000;
		}

		# 암호화 추가
		application live3 {
            live on;
            record off;
            hls on;
            hls_path /var/www/html/stream/hls_encryption;
            hls_fragment 5;
            hls_playlist_length 10;

            # Key encryption settings for live application
            # hls_key_info_file /path/to/your/key_info_file_live3;
            # hls_keys_zone mykeys_live:10m;

            # dash on;
            # dash_path /var/www/html/stream/dash;
        }


		#영상 품질 설정 / 암호화 추가
        application live4 {
            live on;
            record off;
            hls on;
            hls_path /var/www/html/stream/hls_quality_encryption;
            hls_fragment 5;
            hls_playlist_length 10;

            # Key encryption settings for live2 application
            # hls_key_info_file /path/to/your/key_info_file_live4;
            # hls_keys_zone mykeys_live2:10m;

            # Quality variants
            hls_variant _360p BANDWIDTH=500000;
            hls_variant _480p BANDWIDTH=800000;
            hls_variant _720p BANDWIDTH=1500000;
            hls_variant _1080p BANDWIDTH=3000000;
        }


		application live5 {
			live on; # Allows live input
			# record all;
			# record_path /var/www/html/stream/uploaded;
			# record_suffix _recorded.flv;
			# record_append on;
			# record_max_size 128K;
			# for each received stream, transcode for adaptive streaming
			# This single ffmpeg command takes the input and transforms
			# the source into 4 different streams with different bitrates
			# and qualities. # these settings respect the aspect ratio.
			exec_push  /usr/bin/ffmpeg -i rtmp://localhost:1935/$app/$name -async 1 -vsync -1
						-c:v libx264 -c:a aac -b:v 256k  -b:a 64k  -vf "scale=480:trunc(ow/a/2)*2"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_low
						-c:v libx264 -c:a aac -b:v 768k  -b:a 128k -vf "scale=720:trunc(ow/a/2)*2"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_mid
						-c:v libx264 -c:a aac -b:v 1024k -b:a 128k -vf "scale=960:trunc(ow/a/2)*2"  -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_high
						-c:v libx264 -c:a aac -b:v 1920k -b:a 128k -vf "scale=1080:trunc(ow/a/2)*2" -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost:1935/show/$name_1080p
						-c copy -f flv rtmp://localhost:1935/show/$name_src;

			drop_idle_publisher 10s;
		}

		# This is the HLS application
		application show {
			live on; # Allows live input from above application
			deny play all; # disable consuming the stream from nginx as rtmp
			
			hls on; # Enable HTTP Live Streaming
			hls_fragment 3;
			hls_playlist_length 20;
			hls_path /var/www/html/stream/hls/;  # hls fragments path
			hls_nested on;
			# Instruct clients to adjust resolution according to bandwidth
			hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolution
			hls_variant _1080p BANDWIDTH=3000000; # High bitrate, 1080p resolution
			hls_variant _high BANDWIDTH=1500000; # High bitrate, 720p higher-than-SD resolution
			hls_variant _mid BANDWIDTH=800000; # Medium bitrate, 480p SD resolution
			hls_variant _low BANDWIDTH=500000; # Low bitrate, 360 p sub-SD resolution
			
			# MPEG-DASH
            # dash on;
            # dash_path /var/www/html/stream/dash/;  # dash fragments path
			# dash_fragment 3;
			# dash_playlist_length 20;			
		}

		application live6 {
            live on;
			record all;
            record_path /var/www/flv/;
            record_unique on;

            exec_static ffmpeg -i $path -f null - 2>>/var/www/flv/asd.log;

            meta copy;
        }

	}
}

http {

	##
	# Basic Settings
	##
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
    keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
 
    upstream websocket {
        server 10.200.50.83:8010;
    }

	upstream frontend {
		
		server 10.200.50.82:8888;
	}

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;

	server {
		listen  9999;

		location / {
			hello_world;
		}
	}
}



#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
