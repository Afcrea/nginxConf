##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
#server {
#	listen 80 default_server;
#	listen [::]:80 default_server;
#
#	# SSL configuration
#	#
#	# listen 443 ssl default_server;
#	# listen [::]:443 ssl default_server;
#	#
#	# Note: You should disable gzip for SSL traffic.
#	# See: https://bugs.debian.org/773332
#	#
#	# Read up on ssl_ciphers to ensure a secure configuration.
#	# See: https://bugs.debian.org/765782
#	#
#	# Self signed certs generated by the ssl-cert package
#	# Don't use them in a production server!
#	#
#	# include snippets/snakeoil.conf;
#
#	root /var/www/php;
#
#	# Add index.php to the list if you are using PHP
#	index index.php index.html index.htm index.nginx-debian.html;
#
#	server_name _;
#
#	location / {
#		# First attempt to serve request as file, then
#		# as directory, then fall back to displaying a 404.
#		try_files $uri $uri/ =404;
#	}
#
#	# pass PHP scripts to FastCGI server
#	#
#	location ~ [^/]\.php(/|$) {
#		include snippets/fastcgi-php.conf;
#	
#		# With php-fpm (or other unix sockets):
#		fastcgi_pass unix:/run/php/php8.1-fpm.sock;
#		# With php-cgi (or other tcp sockets):
#		#fastcgi_pass 127.0.0.1:9000;
#	}
#
#	# deny access to .htaccess files, if Apache's document root
#	# concurs with nginx's one
#	#
#	location ~ /\.ht {
#		deny all;
#	}
#
#	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
#	        expires       max;
#	        log_not_found off;
#        	access_log    off;
#   	}
#}

server {
	listen 12345;
	server_name default;

	root /var/www/HelloWorld;
	index HelloWorld.php;

	location / {
        try_files $uri $uri/ /HelloWorld.php?_url=$uri&$args;
    }

	location ~ /\.ht {
        deny all;
	}
	
	location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires       max;
        log_not_found off;
        access_log    off;
	}

	location ~ [^/]\.php(/|$) {
        fastcgi_pass  unix:/var/run/php/php8.1-fpm.sock;

        fastcgi_index /HelloWorld.php;

        include fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        fastcgi_param PATH_INFO       $fastcgi_path_info;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}

server {
    # 80번 포트를 사용하려면 nginx를 루트권한으로 시작해야 합니다
    # nginx 설치한 방식에 따라 `sudo` 로 서버를 시작해야 할 수 있습니다.
    # 1000번 근처부터는 루트권한이 필요 없습니다.
    # listen      80;
#    include xe_rewrite.conf;
    listen        8888;
    server_name   default;

    ##########################
    # 운영환경에서는 SSL이 필요합니다
    # listen 443 ssl default_server;

    # ssl on;
    # ssl_session_timeout  5m;
    # ssl_protocols  SSLv2 SSLv3 TLSv1;
    # ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    # ssl_prefer_server_ciphers   on;

    # 아래의 경로는 인증서 저장위치에 따라 달라집니다
    # ssl_certificate        /var/nginx/certs/default.cert;
    # ssl_certificate_key    /var/nginx/certs/default.key;
    ##########################

    # index.php 파일이 존재하는 폴더
#     root /var/www/Youtube;
#     root /var/www/my-rest-api;
#    root /var/www/tutorial/public;
#    root /var/www/php;
#    root /home/phalcon/xeTest/xe-core;
#    root /home/phalcon/invo/public;
#    root /var/www/youtube-clone;
#    root /var/www/example-app/public;
    root /var/www/html;

    index index.php;

    charset utf-8;
    client_max_body_size 100M;
    fastcgi_read_timeout 1800;

    # 도메인의 루트경로를 기술합니다
    # https://localhost:8000/[index.php]
    location / {
        # Matches URLS `$_GET['_url']`
        try_files $uri $uri/ /index.php?_url=$uri&$args;
    }

    # 웹 소켓서버로 프록시
    # location /ws/ {
    # proxy_pass http://10.200.50.82:8010;  # WebSocket 서버의 주소 및 포트
    # proxy_http_version 1.1;
    # proxy_set_header Upgrade $http_upgrade;
    # proxy_set_header Connection "upgrade";
    # }

    # HTTP요청이 위와 매치되지 않으면서
    # 파일 명이 .php 로 끝날때
    location ~ [^/]\.php(/|$) {
        # try_files $uri =404;

        # Ubuntu & PHP7.0-fpm 환경에서 소켓모드
        # 이 경로는 PHP 설치 버전에 따라 달라짐
        fastcgi_pass  unix:/var/run/php/php8.1-fpm.sock;


        # PHP-FPM을 TCP모드에서 사용할 수도 있습니다( 윈도우에서는 필수)
        # 이 경우 FPM이 표준 포트를 읽도록(listen) 설정해야 합니다.
        # https://www.nginx.com/resources/wiki/start/topics/examples/phpfastcgionwindows/
        # fastcgi_pass  127.0.0.1:9000;

        fastcgi_index /index.php;

        include fastcgi_params;
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        fastcgi_param PATH_INFO       $fastcgi_path_info;
        # fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
        # and set php.ini cgi.fix_pathinfo=0

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location ~ /\.ht {
        deny all;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
        expires       max;
        log_not_found off;
        access_log    off;
    }
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
